<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>pt.bitbox</groupId>
        <artifactId>beesoft-app</artifactId>
        <version>1.0</version>
    </parent>
    <groupId>pt.bitbox</groupId>
    <artifactId>beesoft-usb</artifactId>
    <version>3.15.0</version>
    <name>beesoft-usb</name>
    <properties>
        <skipTests>true</skipTests>
        
        <!-- BEESOFT software / firmware versions -->
        <!-- if release.type = 'alpha' the app internally will append the 
        current Date to the version -->
        <release.type>beta.4</release.type>
        <project.release.version>3.15.0</project.release.version>
        <maven.build.timestamp.format>yyyy.MM.dd_HH'h'mm</maven.build.timestamp.format>
        <build.number>${maven.build.timestamp}</build.number>
        <!-- #################################### -->
        
        <project.release.name>BEESOFT-${project.release.version}-${release.type}</project.release.name>                    
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>       
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <libusb4java.version>1.2.0</libusb4java.version>
    </properties>
    <build>
        <finalName>BEESOFT</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>*.properties</include>
                    <include>**/*.png</include>
                    <include>**/*.gif</include>
                    <include>**/*.dylib</include>
                    <include>**/*.so</include>
                    <include>**/*.dll</include>
                </includes>                                   
                <filtering>false</filtering>
            </resource>                         
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/*</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/config</directory>
                <includes>
                    <include>build.properties</include>
                </includes>           
                <filtering>true</filtering>
            </resource>                      
            <resource>
                <directory>src/main/resources/app_resources</directory>
                <includes>
                    <include>*</include>
                    <include>**/*</include>
                </includes>           
                <filtering>false</filtering>
            </resource>  
            <!-- Copies the images from the resources to the src packages
            because of the way swing loads the images -->
            <resource>
                <directory>src/main/resources/app_resources/mainWindow</directory>
                <targetPath>replicatorg/app/ui/mainWindow</targetPath>
                <includes>
                    <include>*</include>                    
                </includes>           
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/app_resources/panels</directory>
                <targetPath>replicatorg/app/ui/panels</targetPath>
                <includes>
                    <include>*</include>                    
                </includes>           
                <filtering>false</filtering>
            </resource>                                                 
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions> 
                    <execution> 
                        <phase>package</phase> 
                        <goals> 
                            <goal>copy-dependencies</goal> 
                        </goals>
                        <configuration>                             
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                            <excludeArtifactIds>junit</excludeArtifactIds>
                        </configuration>
                    </execution> 
                </executions> 
            </plugin>
            <!-- To generate Javadoc run: "mvn javadoc:javadoc" in the root of the project -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <doclet>org.jboss.apiviz.APIviz</doclet>

                    <!-- <docletPath>/path/to/UmlGraph.jar</docletPath> -->
                    <docletArtifact>
                        <groupId>org.jboss.apiviz</groupId>
                        <artifactId>apiviz</artifactId>
                        <version>1.3.1.GA</version>
                    </docletArtifact>
                    <additionalparam>-author -version</additionalparam>
                    <useStandardDocletOptions>true</useStandardDocletOptions>
                </configuration>
            </plugin>            

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                    <mainClass>replicatorg.app.Base</mainClass>
                    <executable>java</executable>
                    <!--workingDirectory>${project.basedir}/target/linux-${project.release.name}</workingDirectory -->
                    <workingDirectory>${project.basedir}/src/main/resources</workingDirectory>
                    <arguments>                        
                        <argument>-ea</argument>
                        <argument>-Xmx2048m</argument>
                        <argument>-XX:+HeapDumpOnOutOfMemoryError</argument>
                        <argument>-classpath</argument>
                        <classpath />
                        <argument>replicatorg.app.Base</argument>
                    </arguments>
                </configuration>
            </plugin>                             
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>                    
                    <execution>
                        <id>windows-package</id>
                        <phase>package</phase>
                        <configuration>
                 
                            <!-- dist-windows -->
                            <target >
                                <property name="resources.dir" value="${project.basedir}/src/main/resources/" />
                                <property name="target.dir" value="${project.build.directory}/win-${project.release.name}" />
                                <property name="dist.dir" value="${resources.dir}/installers/windows/dist" />
                                <property name="lib.dir" value="${project.build.directory}/libs" />
                                <property name="app.resources.dir" value="${project.basedir}/src/main/resources/app_resources" />
                                <property name="natives.dir" value="${resources.dir}/natives" /> 
                                
                                <!-- libs -->
                                <copy todir="${target.dir}/lib">
                                    <fileset dir="${lib.dir}" />
                                    <filelist dir="${app.resources.dir}" files="keywords.txt" />
                                    <fileset dir="${project.build.directory}" includes="*.jar" />    
                                </copy>
                                
                                <copy todir="${target.dir}/natives/windows-i586">
                                    <fileset dir="${natives.dir}/windows-i586" includes="*.dll" />                                
                                </copy>
                                
                                <copy todir="${target.dir}/natives/windows-amd64">
                                    <fileset dir="${natives.dir}/windows-amd64" includes="*.dll" />                                
                                </copy>
                                
                                <copy todir="${target.dir}">
                                    <filelist dir="${app.resources.dir}/images" files="icon.png" />
                                </copy>
                                
                                <!-- standard files -->                                
                                <copy todir="${target.dir}/curaEngine/bin">
                                    <fileset dir="${resources.dir}/curaEngine/distros/windows" />
                                </copy>
                                <copy todir="${target.dir}/estimator">
                                    <fileset dir="${resources.dir}/estimator" />            
                                </copy> 
                                <copy todir="${target.dir}/firmware">
                                    <fileset dir="${resources.dir}/firmware" />
                                </copy>   
                                <copy todir="${target.dir}/machines">
                                    <fileset dir="${resources.dir}/machines" />
                                </copy>                                   
                                <copy todir="${target.dir}/3DModels">
                                    <fileset dir="${resources.dir}/3DModels" />
                                </copy>    
                                <copy todir="${target.dir}/languages">
                                    <fileset dir="${resources.dir}/languages" />
                                </copy>                                                                
                                <copy todir="${target.dir}/filaments">
                                    <fileset dir="${resources.dir}/filaments" />
                                </copy>
                                <copy todir="${target.dir}/firmware/">
                                    <filelist dir="${resources.dir}/firmware" files="firmware.properties" />
                                </copy> 
                                <copy todir="${target.dir}">
                                    <filelist dir="${project.basedir}" files="license.txt,readme.txt,contributors.txt,changelog.txt" />
                                </copy>                                       
                                <copy todir="${target.dir}">
                                    <filelist dir="${dist.dir}" files="BEESOFT.exe" />
                                    <fileset dir="${dist.dir}" includes="java/**/*" />
                                </copy>                          
                            </target>                                        
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>                          
                    </execution>
                    <execution>
                        <id>linux-package</id>
                        <phase>package</phase>
                        <configuration>
                 
                            <!-- dist-linux -->
                            <target >
                                <property name="resources.dir" value="${project.basedir}/src/main/resources/" />
                                <property name="target.dir" value="${project.build.directory}/linux-${project.release.name}" />
                                <property name="dist.dir" value="${resources.dir}/installers/linux/dist" />                                
                                <property name="lib.dir" value="${project.build.directory}/libs" />
                                <property name="app.resources.dir" value="${project.basedir}/src/main/resources/app_resources" /> 
                                <property name="natives.dir" value="${resources.dir}/natives" />
                                                                
                                <!-- libs -->
                                <copy todir="${target.dir}/lib">
                                    <fileset dir="${lib.dir}" />                                    
                                    <filelist dir="${app.resources.dir}" files="keywords.txt" />
                                    <fileset dir="${project.build.directory}" includes="*.jar" />                                    
                                </copy>
                                <copy todir="${target.dir}">
                                    <filelist dir="${app.resources.dir}/images" files="icon.png" />
                                </copy>
                                                                
                                <!-- standard files -->                                
                                <copy todir="${target.dir}">
                                    <filelist dir="${dist.dir}" files="BEESOFT" />
                                </copy>
                                <copy todir="${target.dir}/curaEngine/bin">
                                    <fileset dir="${resources.dir}/curaEngine/distros/linux" />
                                </copy>
                                <copy todir="${target.dir}/firmware">
                                    <fileset dir="${resources.dir}/firmware" />
                                </copy> 
                                <copy todir="${target.dir}/3DModels">
                                    <fileset dir="${resources.dir}/3DModels" />
                                </copy>  
                                <copy todir="${target.dir}/estimator">
                                    <fileset dir="${resources.dir}/estimator" />
                                </copy>   
                                <copy todir="${target.dir}/machines">
                                    <fileset dir="${resources.dir}/machines" />
                                </copy>                                                               
                                <copy todir="${target.dir}">
                                    <filelist dir="." files="license.txt,readme.txt,contributors.txt,changelog.txt" />
                                </copy>
                                <copy todir="${target.dir}/languages">
                                    <fileset dir="${resources.dir}/languages" />
                                </copy>
                                <copy todir="${target.dir}/filaments">
                                    <fileset dir="${resources.dir}/filaments" />
                                </copy>                                
                                <copy todir="${target.dir}/firmware">
                                    <filelist dir="${resources.dir}/firmware" files="firmware.properties" />
                                </copy>                                 
                                <copy todir="${target.dir}/natives/linux-i586">
                                    <fileset dir="${natives.dir}/linux-i586" includes="*.so" />
                                </copy>
                                <copy todir="${target.dir}/natives/linux-amd64">
                                    <fileset dir="${natives.dir}/linux-amd64" includes="*.so" />
                                </copy>
                                <!-- permissions -->
                                <chmod file="${target.dir}/BEESOFT" perm="ugo+rx" />
                                <chmod file="${target.dir}/curaEngine/bin/CuraEngine" perm="ugo+rx" />
                                                        
                            </target>                                        
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>                          
                    </execution>                                       
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>platform-macosx</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <build>
                <plugins>       
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>macos-package</id>
                                <phase>package</phase>
                                <configuration>
                                    <target name="macPackage">
                                        <!-- creates target directory -->
                                        <mkdir dir="${project.build.directory}/mac-${project.release.name}"/>

                                        <property name="jdk.version" value="jdk1.8.0_77.jdk" />
                                        <property name="compile_classpath" refid="maven.compile.classpath"/>
                                        <property name="target.app.dir" value="${project.build.directory}/mac-${project.release.name}" />
                                        <property name="resources.dir" value="${project.basedir}/src/main/resources" />
                                        <property name="installer.dir" value="${resources.dir}/installers/macosx/dist" />
                                        <property name="reso.dir" value="${target.app.dir}/BEESOFT.app/Contents/Resources" />
                                        <property name="jdk.ext.dir" value="${target.app.dir}/BEESOFT.app/Contents/PlugIns/${jdk.version}/Contents/Home/jre/lib/ext" />
                                        <property name="lib.dir" value="${project.build.directory}/libs" />
                                        <property name="app.resources.dir" value="${project.basedir}/src/main/resources/app_resources" />                                

                                        <taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask" classpath="lib/appbundler-1.0.jar" />

                                        <bundleapp outputdirectory="${target.app.dir}" name="BEESOFT" displayname="BEESOFT" identifier="org.beesoft.app"
                                                   mainclassname="replicatorg.app.Base" icon="${installer.dir}/bee.icns">
                                            <runtime dir="/Library/Java/JavaVirtualMachines/${jdk.version}/Contents/Home"/>
                                            <classpath dir="${project.build.directory}" includes="BEESOFT.jar" />
                                            <classpath dir="${lib.dir}" includes="*.jar" />
                                            <classpath dir="${resources.dir}/natives/macosx-universal" includes="*.jar" />
                                            <classpath dir="${installer.dir}" includes="*.jnilib" />
                                            <option value="-Dapple.laf.useScreenMenuBar=true" />
                                            <option value="-Djava.ext.dirs=${jdk.ext.dir}" />
                                            <option value="-Duser.dir=$APP_ROOT/Contents/Resources" />
                                        </bundleapp>
                                
                                        <!-- temporary workaround to make BEESOFT executable on Netbeans, on OSX -->
                                        <copy todir="${user.home}/Library/Java/Extensions" >
                                            <fileset dir="${project.build.directory}" includes="BEESOFT.jar" />
                                            <fileset dir="${lib.dir}" includes="*.jar" />
                                            <fileset dir="${resources.dir}/natives/macosx-universal" includes="*.jar" />
                                            <fileset dir="${installer.dir}" includes="*.jnilib" />
                                        </copy>

                                        <copy todir="${reso.dir}">
                                            <fileset dir="${installer.dir}" includes="drivers/*.dmg" />
                                            <filelist dir="${project.basedir}/src/main/resources/app_resources/images" files="icon.png" />
                                            <filelist dir="${project.basedir}" files="license.txt,readme.txt,contributors.txt,changelog.txt" />
                                        </copy>                              
                                        <copy todir="${reso.dir}/curaEngine/bin">
                                            <fileset dir="${project.basedir}/src/main/resources/curaEngine/distros/mac"  />
                                        </copy>
                                        <copy todir="${reso.dir}/firmware">
                                            <fileset dir="${project.basedir}/src/main/resources/firmware" />
                                        </copy>
                                        <copy todir="${reso.dir}/3DModels">
                                            <fileset dir="${project.basedir}/src/main/resources/3DModels" />
                                        </copy>
                                        <copy todir="${reso.dir}/estimator">
                                            <fileset dir="${project.basedir}/src/main/resources/estimator" />
                                        </copy>
                                        <copy todir="${reso.dir}/machines">
                                            <fileset dir="${project.basedir}/src/main/resources/machines" />
                                        </copy>
                                        <copy todir="${reso.dir}/languages">
                                            <fileset dir="${project.basedir}/src/main/resources/languages" />
                                        </copy>
                                        <copy todir="${reso.dir}/filaments">
                                            <fileset dir="${project.basedir}/src/main/resources/filaments" />
                                        </copy>                                        
                                        <!-- permissions -->
                                        <chmod file="${target.app.dir}/BEESOFT.app" perm="ugo+rx" />
                                        <chmod file="${target.app.dir}/BEESOFT.app/Contents/Resources/curaEngine/bin/CuraEngine" perm="ugo+rx" />
                                    </target>                                                                                                
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>  
                        </executions>
                    </plugin>                    
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>replicatorg.app.Base</mainClass>
                            <workingDirectory>${project.basedir}/target/mac-${project.release.name}/BEESOFT.app/Contents/Resources</workingDirectory>
                            <arguments>                        
                                <argument>-ea</argument>
                                <argument>-Xmx2048m</argument>
                                <argument>-XX:+HeapDumpOnOutOfMemoryError</argument>
                            </arguments>
                        </configuration>
                    </plugin>                  
                </plugins>
            </build>
        </profile>        
        <profile>
            <id>platform-linux</id>
            <activation>
                <os>
                    <family>linux</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>replicatorg.app.Base</mainClass>
                            <executable>java</executable>
                            <workingDirectory>${project.basedir}/target/linux-${project.release.name}</workingDirectory>
                            <arguments>                        
                                <argument>-ea</argument>
                                <argument>-Xmx2048m</argument>
                                <argument>-XX:+HeapDumpOnOutOfMemoryError</argument>
                                <argument>-classpath</argument>
                                <classpath />
                                <argument>replicatorg.app.Base</argument>
                            </arguments>
                        </configuration>
                    </plugin>                  
                </plugins>
            </build>
        </profile>
        <profile>
            <id>platform-windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>replicatorg.app.Base</mainClass>
                            <workingDirectory>${project.basedir}/target/win-${project.release.name}</workingDirectory>
                            <arguments>                        
                                <argument>-ea</argument>
                                <argument>-Xmx2048m</argument>
                                <argument>-XX:+HeapDumpOnOutOfMemoryError</argument>
                            </arguments>
                        </configuration>
                    </plugin>                  
                </plugins>
            </build>
        </profile>     
    </profiles>
    <repositories>
        <repository>
            <id>unknown-jars-temp-repo</id>
            <name>A temporary repository created by NetBeans for libraries and jars it could not identify. Please replace the dependencies in this repository with correct ones and delete this repository.</name>
            <url>file:${project.basedir}/lib</url>
        </repository>
    </repositories>
    <dependencies>
        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>j3dcore</artifactId>
            <version>1.6.0-scijava-2</version>
        </dependency>
        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>j3dutils</artifactId>
            <version>1.6.0-scijava-2</version>
        </dependency>
        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>vecmath</artifactId>
            <version>1.6.0-scijava-2</version>
        </dependency>
        <dependency>
            <groupId>org.jogamp.jogl</groupId>
            <artifactId>jogl-all</artifactId>
            <version>2.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.jogamp.gluegen</groupId>
            <artifactId>gluegen-rt</artifactId>
            <version>2.3.2</version>
        </dependency>
        <dependency>
            <groupId>com.miglayout</groupId>
            <artifactId>miglayout</artifactId>
            <version>3.7.4</version>
        </dependency>                            
        <dependency>
            <groupId>org.devzendo</groupId>
            <artifactId>Quaqua</artifactId>
            <version>7.3.4</version>
        </dependency> 
        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.0.19</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>4.4.1.201607150455-r</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.usb4java</groupId>
            <artifactId>usb4java</artifactId>
            <version>1.2.0</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>4.2.2</version>
        </dependency>
        <dependency>
            <groupId>com.yuvimasory</groupId>
            <artifactId>orange-extensions</artifactId>
            <version>1.3.0</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>mrj</groupId>
            <artifactId>MRJToolkitStubs</artifactId>
            <version>1.0</version>
            <type>jar</type>
        </dependency>
        
        <!-- Tests dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>1.0.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>unknown.binary</groupId>
            <artifactId>AbsoluteLayout</artifactId>
            <version>SNAPSHOT</version>
        </dependency>
    </dependencies>
</project>
